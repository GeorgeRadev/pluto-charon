<?xml version="1.0" encoding="UTF-8"?>
<project name="pluto-charon" default="all" basedir=".">
	<property name="lib.dir" value="${basedir}/lib"/>


	<property name="pluto.src.dir" value="${basedir}/pluto"/>
	<property name="pluto.build.dir" value="${basedir}/out_pluto"/>
	<property name="pluto.build.jar" value="${basedir}/pluto.jar"/>

	<property name="charon.src.dir" value="${basedir}/charon"/>
	<property name="charon.build.dir" value="${basedir}/out_charon"/>
	<property name="charon.build.jar" value="${basedir}/charon.jar"/>

	<property name="test.src.dir" value="${basedir}/test"/>
	<property name="test.build.dir" value="${basedir}/out_test"/>

	<target name="clean">
		<delete dir="${pluto.build.dir}" failonerror="false"/>
		<delete dir="${pluto.build.test.dir}" failonerror="false"/>
		<delete file="${pluto.build.jar}"/>

		<delete dir="${charon.build.dir}" failonerror="false"/>
		<delete file="${charon.build.jar}"/>

		<delete dir="${test.build.dir}" failonerror="false"/>

		<delete>
			<fileset dir="${basedir}/log" includes="*.*"/>
		</delete>
		<delete dir="${basedir}/tmp" failonerror="false"/>
		<mkdir dir="${basedir}/tmp"/>
	</target>

	<target name="init">
	</target>

	<target name="compile_charon" depends="init">
		<mkdir dir="${charon.build.dir}"/>
		<javac srcdir="${charon.src.dir}" destdir="${charon.build.dir}" debug="false" optimize="true" target="1.6"
			source="1.6" nowarn="false" fork="true" memoryInitialSize="128m" memoryMaximumSize="128m" includeantruntime="false">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>

		<copy todir="${charon.build.dir}">
			<fileset dir="${charon.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="compile_puto" depends="compile_charon">
		<mkdir dir="${pluto.build.dir}"/>
		<javac srcdir="${pluto.src.dir}" destdir="${pluto.build.dir}" debug="false" optimize="true" target="1.6"
			source="1.6" nowarn="false" fork="true" memoryInitialSize="128m" memoryMaximumSize="128m" includeantruntime="false">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<pathelement path="${charon.build.dir}"/>
			</classpath>
		</javac>

		<copy todir="${pluto.build.dir}">
			<fileset dir="${pluto.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="compile_puto">
	</target>
	<target name="build" depends="compile">
	</target>

	<target name="test" depends="build">
		<mkdir dir="${test.build.dir}"/>
		<!-- compile tests -->
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" debug="true" optimize="true" target="1.6" source="1.6"
			nowarn="false" fork="true" memoryInitialSize="128m" memoryMaximumSize="128m" includeantruntime="false">
			<classpath>
				<pathelement path="${build.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<pathelement path="${charon.build.dir}"/>
				<pathelement path="${pluto.build.dir}"/>
			</classpath>
		</javac>

		<copy todir="${test.build.dir}">
			<fileset dir="${test.src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

		<!-- run junit tests -->
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${test.build.dir}"/>
				<pathelement path="${charon.build.dir}"/>
				<pathelement path="${pluto.build.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>

			<formatter type="plain"/>

			<batchtest fork="yes" todir="${test.build.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/*Test*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="jar_charon" depends="test">
		<delete file="${charon.build.jar}"/>

		<jar destfile="${charon.build.jar}">
			<fileset dir="${charon.build.dir}"/>

			<zipfileset src="lib/sql_helper.jar" excludes="META-INF/**/*"/>

			<manifest>
				<attribute name="Main-Class" value="pluto.charon.Main"/>
			</manifest>
		</jar>
	</target>

	<target name="svn" depends="test">
		<property name="tmp.file" value="${test.build.dir}/temp.tmp"/>
		<property name="revision.file" value="${pluto.build.dir}/pluto/core/SVNRevision.properties"/>
		<exec executable="svn" output="${tmp.file}">
			<arg value="info"/>
		</exec>
		<property prefix="svn" file="${tmp.file}"/>
		<property name="SVNRevision" value="${svn.Revision}"/>

		<echo>SVNRevision=${svn.Revision}</echo>
		<echo file="${revision.file}" append="false">SVNRevision=${svn.Revision}</echo>
		<echo>Writing to file: ${revision.file}</echo>

		<delete file="${tmp.file}" failonerror="false"/>
	</target>

	<target name="jar_pluto" depends="svn">
		<delete file="${pluto.build.jar}"/>

		<jar destfile="${pluto.build.jar}">
			<fileset dir="${charon.build.dir}"/>
			<fileset dir="${pluto.build.dir}" excludes="pluto/core/SVNRevision.properties"/>
			<fileset dir="${test.build.dir}" includes="pluto/core/SVNRevision.properties"/>
			<zipfileset src="lib/jetty-all-8.1.10.v20130312.jar" excludes="META-INF/**/*"/>
			<zipfileset src="lib/servlet-api-3.0.jar" excludes="META-INF/**/*"/>
			
			<zipfileset src="lib/sql_helper.jar" excludes="META-INF/**/*"/>
			<!-- SQLite driver -->
			<zipfileset src="lib/sqlite-jdbc-3.8.11.1.jar" excludes="META-INF/**/*"/>
			<!-- ORACLE -->
			<!--zipfileset src="lib/ojdbc6.jar" excludes="META-INF/**/*"/-->
			<!-- MS SQL SERVER  driver-->
			<!--zipfileset src="lib/jtds-1.2.5.jar" excludes="META-INF/**/*"/-->
			<!-- DB2 driver -->
			<!--zipfileset src="lib/db2jcc4.jar" excludes="META-INF/**/*"/-->


			<manifest>
				<attribute name="Main-Class" value="pluto.core.PlutoServer"/>
			</manifest>
		</jar>
	</target>

	<target name="all" depends="jar_pluto, jar_charon"/>

</project>
